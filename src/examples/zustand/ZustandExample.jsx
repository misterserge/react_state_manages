import { useCounterStore } from './store'

const CounterDisplay = () => {
  const count = useCounterStore((state) => state.count)
  return <div className="counter-display">{count}</div>
}

const CounterControls = () => {
  const increment = useCounterStore((state) => state.increment)
  const decrement = useCounterStore((state) => state.decrement)
  const reset = useCounterStore((state) => state.reset)
  const incrementAsync = useCounterStore((state) => state.incrementAsync)
  const loading = useCounterStore((state) => state.loading)
  
  return (
    <div className="buttons">
      <button className="increment" onClick={increment} disabled={loading}>
        +1
      </button>
      <button className="decrement" onClick={decrement} disabled={loading}>
        -1
      </button>
      <button className="reset" onClick={reset} disabled={loading}>
        Reset
      </button>
      <button className="async-btn" onClick={incrementAsync} disabled={loading}>
        {loading ? 'Loading...' : 'Async +1'}
      </button>
    </div>
  )
}

const UsersList = () => {
  const users = useCounterStore((state) => state.users)
  const loading = useCounterStore((state) => state.loading)
  const fetchUsers = useCounterStore((state) => state.fetchUsers)

  return (
    <div>
      <button className="async-btn" onClick={fetchUsers} disabled={loading}>
        {loading ? 'Loading...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'}
      </button>
      
      {users.length > 0 && (
        <div className="user-list">
          {users.map(user => (
            <div key={user.id} className="user-item">
              <div className="user-info">
                <span className="user-name">{user.name}</span>
                <span className="user-email">{user.email}</span>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  )
}

const ZustandExample = () => {
  return (
    <div className="counter-container">
      <h2>Zustand</h2>
      <CounterDisplay />
      <CounterControls />
      <UsersList />
      
      <div className="info-section">
        <h3>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h3>
        <ul>
          <li>‚úÖ –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π API, –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏</li>
          <li>‚úÖ –ù–µ —Ç—Ä–µ–±—É–µ—Ç Provider, —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —Ö—É–∫</li>
          <li>‚úÖ –°–µ–ª–µ–∫—Ç–æ—Ä—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã</li>
          <li>‚úÖ –û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li>
          <li>‚úÖ –ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–∞–∑–º–µ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (~1kb)</li>
          <li>‚úÖ TypeScript –∏–∑ –∫–æ—Ä–æ–±–∫–∏</li>
          <li>‚úÖ Middleware –¥–ª—è DevTools, persist –∏ –¥—Ä—É–≥–∏—Ö —Ñ–∏—á</li>
          <li>üì¶ –í—Å—è –ª–æ–≥–∏–∫–∞ –≤ <code>store.js</code></li>
        </ul>
      </div>
    </div>
  )
}

export default ZustandExample

